function [geoDataMerged,fig,h] = showStateData(geoData,T,fixedYear)
%SHOWSTATEDATA  Show spatial data for a given year
%
%  geoDataMerged = gfx__.showStateSpending(geoData,T);
%  geoDataMerged = gfx__.showStateSpending(geoData,T,fixedYear);
%  [geoDataMerged,fig,h] = gfx__.showState(...);
%
% Inputs
%  geoData   - Contains data in format for `mapshow`
%  T         - Table of educational spending per student by state 1993-2016
%  fixedYear - Any value from 1993:2016 to show as fixed "slice" (goes into
%                 geoDataSpending.Properties.UserData.FixedYear; determines
%                 value of .IndexedValue variable property). 
%                 -> Default `fixedYear` value is 1993
%
% Output
%  geoDataMerged   - Combination from geoData and T merge.
%  fig             - Figure handle
%  h               - Group graphics object with child State objects as
%                       array of graphics Patch handles.
%
% See also: gfx__, index.mlx

if nargin < 3
   fixedYear = 1993;
end

geoDataMerged = p__.mergeGeoSpendingData(geoData,T,fixedYear);

indexedLims = [...
   min(geoDataMerged.IndexedValue), ...
   max(geoDataMerged.IndexedValue) ...
   ];
S = { ...
   {'IndexedValue',indexedLims,'CData',[1 64]},...
   {'Party',"R",'CDataMapping','scaled'},...
   {'Party',"D",'CDataMapping','scaled'},...
   {'Party',"R",'FaceColor','flat'},...
   {'Party',"D",'FaceColor','flat'},...
   {'Party',"R",'EdgeColor',geoData.Properties.UserData.R},...
   {'Party',"R",'LineWidth',2},...
   {'Party',"D",'EdgeColor',geoData.Properties.UserData.D},...
   {'Party',"D",'LineWidth',2},...
   {'Party',"R",'DisplayName',"Republican State"},...
   {'Party',"D",'DisplayName',"Democratic State"} ...
};
[~,fig,h] = gfx__.showPartyMapping(geoDataMerged,S,...
   'TitleText',sprintf('By State: %d',fixedYear),...
   'ColorBar','on');
set(h.Children,'EdgeAlpha',0.85);
end